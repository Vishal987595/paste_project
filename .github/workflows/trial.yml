# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

on: [workflow_dispatch]

jobs:
  Paste_regression:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '1.8.0_332'
        distribution: 'adopt'

    - name: Download and Set up Maven
      run: |
        MAVEN_VERSION="3.6.3"
        wget -q "https://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz" -O maven.tar.gz
        tar xzf maven.tar.gz
        export MAVEN_HOME=$PWD/apache-maven-${MAVEN_VERSION}
        export PATH=$MAVEN_HOME/bin:$PATH
        echo "Maven installed to $MAVEN_HOME"
    
    - name: Display Maven and Java Info
      run: |
        echo "Apache Maven $(mvn -v)"
        echo "Maven home: $MAVEN_HOME"
        echo "Java version: $(java -version)"
        echo "Java home: $JAVA_HOME"

    # - name: Run get_projects.sh
      # run: bash get_projects.sh
    # - name: Run the start.sh
    #   run: bash start.sh
      
    # - name: Copy Results Directory
    #   run: |
    #       # Create a copy of the "results" directory
    #       cp -r results results_copy
    #       mvn -v
    #       java -version

    # - name: Commit and Push Results Directory
    #   run: |
    #       git config --local user.email "vishal.ghoniya@iitgn.ac.in"
    #       git config --local user.name "Vishal 987595"

    #       # Add and commit the "results_copy" directory
    #       git add results_copy
    #       git commit -m "Add 'results' directory"
    #       git push

      
# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     
#     - name: Build with Maven
#       run: mvn -B package --file pom.xml

#     # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#     - name: Update dependency graph
#       uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
    
    # - name: Download
    #   uses: actions/download-artifact@v3

    - name: Display structure of downloaded files
      run: ls -R
